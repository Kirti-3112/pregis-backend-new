trigger:
  - master

variables:
  azureSubscription: 'pregis-backend-service-connection'

  # Azure Container Registry (ACR)
  acrServiceConnection: 'pregisbackenddockerregistry'
  acrName: 'pregisacr'
  imageRepository: 'pregis-reporting'

  # Azure App Service details
  webAppName: 'pregisReporting'
  resourceGroupName: 'pregis_rg'
  tag: '$(Build.BuildId)'

pool:
  name: 'myvmagent'

stages:
- stage: Build
  displayName: 'Build and Push to ACR'
  jobs:
  - job: BuildJob
    displayName: 'Build and Push Docker Image'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '20'
      displayName: 'Install Node.js'

    - script: |
        echo "---Installing dependencies---"
        npm install
        echo "---Building the application---"
        npm run build
      displayName: 'npm install and build'

    - task: Docker@2
      displayName: Login to ACR
      inputs:
        command: login
        containerRegistry: $(acrServiceConnection)

    - task: Docker@2
      displayName: 'Build and Push Docker Image to ACR'
      inputs:
        command: 'buildAndPush'
        containerRegistry: $(acrServiceConnection)
        repository: $(imageRepository)
        dockerfile: '**/Dockerfile'
        tags: |
          $(tag)
          latest

# STAGE 2: Deploy to Azure Web App
- stage: Deploy
  displayName: 'Deploy to Azure App Service'
  dependsOn: Build
  jobs:
  - deployment: DeployApp
    environment: development
    displayName: 'Deploy to Web App'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebAppContainer@1
            displayName: 'Deploy Docker Image to Azure Web App'
            inputs:
              azureSubscription: $(azureSubscription)
              resourceGroupName: $(resourceGroupName)
              appName: $(webAppName)
              containers: |
                $(acrName).azurecr.io/$(imageRepository):$(tag)
